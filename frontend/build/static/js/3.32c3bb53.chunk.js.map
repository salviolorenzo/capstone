{"version":3,"sources":["Components/Boards/Board_1.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Calendar","React","lazy","Promise","all","e","then","bind","Weather","News","Board_1","props","a","createElement","className","fallback","weather","icon","events","map","item","id","title","allDay","allday","start","Date","eventstart","end","eventend","desc","description","selectedEvent","modalIsOpen","term","displayEvent","openModal","afterOpenModal","closeModal","onSlotChange","handleNewEvent","handleDelete","handleTitleChange","handleDescChange","handleStartTime","handleEndTime","changeBox","news","handleNewsSearch","queryTerm","handleQueryTerm"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GACMG,EAAWC,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAV,EAAAW,EAAA,IAAAX,EAAAW,EAAA,KAAAC,KAAAZ,EAAAa,KAAA,aAC5BC,EAAUP,IAAMC,KAAK,kBAAMR,EAAAW,EAAA,GAAAC,KAAAZ,EAAAa,KAAA,aAE3BE,EAAOR,IAAMC,KAAK,kBAAMR,EAAAW,EAAA,GAAAC,KAAAZ,EAAAa,KAAA,aA0DfG,UAxDf,SAAiBC,GACf,OACEb,EAAAc,EAAAC,cAAA,OAAKC,UAAU,SACbhB,EAAAc,EAAAC,cAAChB,EAAA,SAAD,CAAUkB,SAAUjB,EAAAc,EAAAC,cAAA,0BAClBf,EAAAc,EAAAC,cAACL,EAAD,CAASQ,QAASL,EAAMK,QAASC,KAAMN,EAAMM,QAE/CnB,EAAAc,EAAAC,cAAChB,EAAA,SAAD,CAAUkB,SAAUjB,EAAAc,EAAAC,cAAA,0BAClBf,EAAAc,EAAAC,cAACb,EAAD,CACEkB,OAAQP,EAAMO,OAAOC,IAAI,SAAAC,GACvB,MAAO,CACLC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZC,OAAQH,EAAKI,OACbC,MAAO,IAAIC,KAAKN,EAAKO,YACrBC,IAAK,IAAIF,KAAKN,EAAKS,UACnBC,KAAMV,EAAKW,eAGfC,cAAerB,EAAMqB,cACrBC,YAAatB,EAAMsB,YACnBV,OAAQZ,EAAMY,OACdW,KAAMvB,EAAMuB,KACZJ,KAAMnB,EAAMmB,KACZL,MAAOd,EAAMc,MACbG,IAAKjB,EAAMiB,IACXO,aAAcxB,EAAMwB,aACpBC,UAAWzB,EAAMyB,UACjBC,eAAgB1B,EAAM0B,eACtBC,WAAY3B,EAAM2B,WAClBC,aAAc5B,EAAM4B,aACpBC,eAAgB7B,EAAM6B,eACtBC,aAAc9B,EAAM8B,aACpBC,kBAAmB/B,EAAM+B,kBACzBC,iBAAkBhC,EAAMgC,iBACxBC,gBAAiBjC,EAAMiC,gBACvBC,cAAelC,EAAMkC,cACrBC,UAAWnC,EAAMmC,aAGrBhD,EAAAc,EAAAC,cAAChB,EAAA,SAAD,CAAUkB,SAAUjB,EAAAc,EAAAC,cAAA,0BAClBf,EAAAc,EAAAC,cAACJ,EAAD,CACEsC,KAAMpC,EAAMoC,KACZC,iBAAkBrC,EAAMqC,iBACxBC,UAAWtC,EAAMsC,UACjBC,gBAAiBvC,EAAMuC","file":"static/js/3.32c3bb53.chunk.js","sourcesContent":["import React, { Component, Suspense } from 'react';\nconst Calendar = React.lazy(() => import('../Tiles/Calendar'));\nconst Weather = React.lazy(() => import('../Tiles/Weather'));\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nconst News = React.lazy(() => import('../Tiles/News'));\n\nfunction Board_1(props) {\n  return (\n    <div className=\"board\">\n      <Suspense fallback={<div>Loading...</div>}>\n        <Weather weather={props.weather} icon={props.icon} />\n      </Suspense>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Calendar\n          events={props.events.map(item => {\n            return {\n              id: item.id,\n              title: item.title,\n              allDay: item.allday,\n              start: new Date(item.eventstart),\n              end: new Date(item.eventend),\n              desc: item.description\n            };\n          })}\n          selectedEvent={props.selectedEvent}\n          modalIsOpen={props.modalIsOpen}\n          allDay={props.allDay}\n          term={props.term}\n          desc={props.desc}\n          start={props.start}\n          end={props.end}\n          displayEvent={props.displayEvent}\n          openModal={props.openModal}\n          afterOpenModal={props.afterOpenModal}\n          closeModal={props.closeModal}\n          onSlotChange={props.onSlotChange}\n          handleNewEvent={props.handleNewEvent}\n          handleDelete={props.handleDelete}\n          handleTitleChange={props.handleTitleChange}\n          handleDescChange={props.handleDescChange}\n          handleStartTime={props.handleStartTime}\n          handleEndTime={props.handleEndTime}\n          changeBox={props.changeBox}\n        />\n      </Suspense>\n      <Suspense fallback={<div>Loading...</div>}>\n        <News\n          news={props.news}\n          handleNewsSearch={props.handleNewsSearch}\n          queryTerm={props.queryTerm}\n          handleQueryTerm={props.handleQueryTerm}\n        />\n      </Suspense>\n\n      {/* Adjust news topics based on preferences either chosen or through machine learning  */}\n      {/* Compound multiple sources to list */}\n      {/* Truth-meter ??? */}\n      {/* Calendar through Google API */}\n      {/* When you have a free night, suggest X or Y event  */}\n    </div>\n  );\n}\nexport default Board_1;\n"],"sourceRoot":""}